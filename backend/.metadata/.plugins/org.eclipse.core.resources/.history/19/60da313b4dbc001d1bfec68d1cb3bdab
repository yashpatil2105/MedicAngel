package com.app.services;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.dto.CampaignAdminDto;
import com.app.dto.CampaignDto;
import com.app.pojos.Campaign;
import com.app.repository.CampaignRepository;

@Service
@Transactional
public class CampaignServiceImpl implements CampaignService{
	
	@Autowired
	private CampaignRepository campaignRepo;
	

	@Override
	public List<CampaignDto> getAllCampaign(){	
		return ObjectMapperUtils.mapAll(campaignRepo.findByActive(),CampaignDto.class);
	}


	@Override
	public Campaign getCampaign(Integer campId) {
		return  campaignRepo.findById(campId).orElseThrow(() -> new UsernameNotFoundException("Invalid Campaign ID"));
	}
	
	@Override
	public List<CampaignAdminDto> deactiveCampaign() {
		return ObjectMapperUtils.mapAll(campaignRepo.findByInactive(),CampaignAdminDto.class);   
		
	}
    
	@Override
	public List<CampaignAdminDto> activeCampaign() {
		
		return ObjectMapperUtils.mapAll(campaignRepo.findByActive(),CampaignAdminDto.class);
	}

	@Override
	public void activeCampaign(Integer campId) {
		
		campaignRepo.updateActive(campId);
	}


	@Override
	public void deleteCampaignId(Integer campId) {
		
		campaignRepo.delete(campaignRepo.findById(campId).orElseThrow(() -> new UsernameNotFoundException("Invalid Campaign ID")));
	}


	

}
